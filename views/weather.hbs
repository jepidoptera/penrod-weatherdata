<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" type="text/css" href="/assets/styles/salesforce-lightning-design-system.css" />
    <link rel="stylesheet" type="text/css" href="/css/weather.css" />
    <link rel="shortcut icon" href="/favicon.png" />
    <title>Weather in {{city}}</title>
</head>
<body>
    <div class="slds-grid slds-grid_align-center">
    <div class="slds-col slds-size_11-of-12 slds-medium-size_2-of-3 slds-large-size_5-of-12">

        {{!-- back button --}} 
        <div style="float: left">
        <button class="slds-button slds-m-around_small" title="Back"
            onclick="window.location.href='/'">
            <span class="slds-icon_container slds-icon-utility-back slds-m-right_medium" title="Back to browse page">
                <svg class="slds-icon slds-icon-text-default" aria-hidden="true">
                    <use xlink:href="/assets/icons/utility-sprite/svg/symbols.svg#back"></use>
                </svg>
            </span>
            Back
            <span class="slds-assistive-text">Back to Menu</span>
        </button>
        </div>

        {{!-- next button --}}
        <div style="float: right">
        <button class="slds-button slds-m-around_small" title="Back"
            onclick="window.location.href='/weather/{{nextCity}}'">
            Next
            <span class="slds-icon_container slds-icon-utility-back slds-m-left_medium" title="Back to browse page">
                <svg class="slds-icon slds-icon-text-default" aria-hidden="true">
                    <use xlink:href="/assets/icons/utility-sprite/svg/symbols.svg#forward"></use>
                </svg>
            </span>
            <span class="slds-assistive-text">Back to Menu</span>
        </button>
        </div>

        {{!-- title --}}
        <h1>
            {{city}}, {{country}}
        </h1>

        {{!-- info box --}}
        <div class="slds-box slds-align_absolute-center" style="width: 100%;">
        <div style="display: inline-block">
            {{Capitalize description}} in {{city}} right now. <hr>
            <div style="font-size: 14pt; margin: 10px">
                Temperature: <span id="degreesF"></span>Â° Fahrenheit <br>
                Humidity: {{humidity}}% <br>
                Barometric pressure: {{pressure}} millibars <br>
            <br> </div>
            <span id="localTime"></span> <br>
        </div>
        </div>
    </div>
    </div>
</body>

{{!-- fill in some details --}}
<script>
    window.addEventListener('load', () => {
        // convert from Kelvin to Fahrenheit
        document.getElementById("degreesF").textContent = Math.round({{temperature}} * 9 / 5 - 459.67);
        // count down til sunset or whatever
        displayTime();
        setInterval(displayTime, 10000)
        // occasionally refresh to keep the weather data current
        setInterval(() => {window.location.href = window.location.href}, 600000)
    })
    // display correct information about the time and what the sun is doing.
    function displayTime() {
        let now = Math.floor(Date.now() / 1000);
        let sunRiseHappened = now > {{sunrise}};
        let sunSetHappened = now > {{sunset}};
        let hours = Math.floor(((now + {{timezone}}) % 86400) / 3600);
        let am_pm = hours > 12 ? "PM" : "AM";
        hours %= 12;
        let minutes = Math.floor(((now + {{timezone}}) % 3600) / 60);
        let message = `Local time is ${hours}:${minutes} ${am_pm}. <br>`;
        if (!sunRiseHappened) {
            // countdown til sunrise
            let hours = Math.floor(({{sunrise}} - now) / 3600);
            let minutes = Math.floor((({{sunrise}} - now) % 3600) / 60);
            message += `Sunrise in ${hours > 0 ? (hours > 1 ? `${hours} hours` : "one hour") + " and " : ""}${minutes} minutes.`
        }
        else if (!sunSetHappened) {
            // countdown til sunset
            let hours = Math.floor(({{sunset}} - now) / 3600);
            let minutes = Math.floor((({{sunset}} - now) % 3600) / 60);
            message += `Sunset in ${hours > 0 ? (hours > 1 ? `${hours} hours` : "one hour") + " and " : ""}${minutes} minutes.`
        }
        else {
            let hours = Math.floor((now - {{sunset}}) / 3600);
            let minutes = Math.floor(((now - {{sunset}}) % 3600) / 60);
            message += `The sun set ${hours > 0 ? (hours > 1 ? `${hours} hours` : "one hour") + " and " : ""}${minutes} minutes ago.`
        }
        document.getElementById("localTime").innerHTML = message;
    }
</script>
